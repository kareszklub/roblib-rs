name: Test & Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        toolchain: [stable]
        experimental: [false]
        include:
          - os: ubuntu-latest
            toolchain: nightly
            experimental: true
    
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    name: Test - ${{ matrix.os }} - ${{ matrix.toolchain }}

    steps:
    - uses: actions/checkout@v3
    
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        default: true
        profile: minimal
        components: clippy

    - uses: actions-rs/cargo@v1
      with:
        command: build
        args: --workspace --verbose
    - uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace --verbose --all-features

    - uses: actions-rs/clippy-check@v1
      if: matrix.toolchain == 'stable'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features

  build:
    needs: [test]
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf]
        include:
         - os: windows-latest
           target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    continue-on-error: false
    name: Build - ${{ matrix.target }}

    steps:
      - uses: actions/checkout@v3
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal
          target: ${{ matrix.target }}
      
      - name: Build base version
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' || matrix.target == 'armv7-unknown-linux-gnueabihf' }}
          command: build
          args: --release -p roblib-server --verbose --target ${{ matrix.target }}

      - name: Upload base version
        uses: actions/upload-artifact@v3
        with:
          name: roblib-server-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/roblib-server
            target/${{ matrix.target }}/release/roblib-server.exe
          if-no-files-found: error

      - name: Build Roland version
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' || matrix.target == 'armv7-unknown-linux-gnueabihf' }}
          command: build
          args: --release -p roblib-server --verbose --target ${{ matrix.target }} --features roland
      
      - name: rename file
        shell: bash
        run: |
          [ ${{ matrix.os }} = "windows-latest" ] && EXT='.exe' || EXT=''
          mv target/${{ matrix.target }}/release/roblib-server$EXT target/${{ matrix.target }}/release/roblib-server-roland$EXT
      
      - name: Upload Roland version
        uses: actions/upload-artifact@v3
        with:
          name: roland-server-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/roblib-server-roland
            target/${{ matrix.target }}/release/roblib-server-roland.exe
          if-no-files-found: error
